% function [label, torque, velocity, damageTypeStr, damageTypeInt] = extractVariables(inputString)
%     %torque = extractBetween(inputString, '_', '_Nm');
%     %velocity = extractBetween(inputString, '5_', '_');
% 
%     if contains(inputString, 'GF') || contains(inputString, 'Gf')
%         label = "damaged";
%         damageTypeStr = "micropitting";
%         damageTypeInt = 1;
%     else
%         label = "healthy";
%         damageTypeStr = "none";
%         damageTypeInt = 0;
%     end
% 
%     pattern = '112_5_[^_]*_(\d+)[^_]*(\d+)';
%     tokens = regexp(inputString, pattern, 'tokens');
% 
%     if ~isempty(tokens)
%         numbers = tokens{1};
%         firstNum = str2double(numbers{1});
%         secondNum = str2double(numbers{2});
%     end
% 
%     torque = firstNum;
%     velocity = secondNum;
% end

function [label, torque, velocity, firstNum, secondNum, tokens] = extractVariables(inputString)
    % Extract torque and velocity from the input string
    torque = extractBetween(inputString, '_', '_Nm');
    velocity = extractBetween(inputString, '_', '_r');
    
    % Determine the label based on the presence of "GF"
    if contains(inputString, 'GF')
        label = 'damaged';
    else
        label = 'healthy';
    end
    
   pattern = '-112_5_'
   length(pattern)
   startIndex = strfind(inputString, pattern)

   if ~isempty(startIndex)
       startIndex = startIndex + length(pattern)
       remainderString = inputString(startIndex:end);

       numPattern = '(\d+)';
       tokens = regexp(remainderString, numPattern, 'tokens');

       disp(remainderString)

       patternNumbers = '(\d+)';
       tokens
end
