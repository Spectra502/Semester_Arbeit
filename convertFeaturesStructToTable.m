function features_table = convertFeaturesStructToTable(features, signal_columns)
    feature_names = {};
    channels = size(signal_columns, 2);
    for ch = 1:channels
        feature_names = [feature_names, ...
            {['mean_ch' num2str(ch)], ['rms_ch' num2str(ch)], ['std_dev_ch' num2str(ch)], ...
            ['skewness_ch' num2str(ch)], ['kurtosis_ch' num2str(ch)], ['peak_to_peak_ch' num2str(ch)], ...
            ['crest_factor_ch' num2str(ch)], ['impulse_factor_ch' num2str(ch)], ['clearance_factor_ch' num2str(ch)], ...
            ['shape_factor_ch' num2str(ch)], ['energy_ch' num2str(ch)], ['entropy_ch' num2str(ch)], ...
            ['mean_freq_ch' num2str(ch)], ['median_freq_ch' num2str(ch)], ['bandwidth_ch' num2str(ch)], ...
            ['spectral_centroid_ch' num2str(ch)], ['spectral_flatness_ch' num2str(ch)], ['spectral_entropy_ch' num2str(ch)], ...
            ['spectral_skewness_ch' num2str(ch)], ['spectral_kurtosis_ch' num2str(ch)], ...
            ['mean_wavelet_ch' num2str(ch)], ['var_wavelet_ch' num2str(ch)], ['entropy_wavelet_ch' num2str(ch)], ...
            ['energy_wavelet_ch' num2str(ch)], ['mean_spectrogram_ch' num2str(ch)], ['var_spectrogram_ch' num2str(ch)], ...
            ['entropy_spectrogram_ch' num2str(ch)], ['energy_spectrogram_ch' num2str(ch)]}];
    end

    features_table = array2table(features, 'VariableNames', feature_names);
end